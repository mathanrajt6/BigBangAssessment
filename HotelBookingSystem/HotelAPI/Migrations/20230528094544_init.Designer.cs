// <auto-generated />
using HotelAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelAPI.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20230528094544_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelAPI.Models.Amenities", b =>
                {
                    b.Property<int>("AmentityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmentityId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AmentityId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            AmentityId = 1,
                            Description = "A large swimming pool for guests to enjoy.",
                            Name = "Swimming Pool"
                        },
                        new
                        {
                            AmentityId = 2,
                            Description = "A fully equipped fitness center with modern equipment.",
                            Name = "Fitness Center"
                        },
                        new
                        {
                            AmentityId = 3,
                            Description = "An on-site restaurant offering delicious meals.",
                            Name = "Restaurant"
                        },
                        new
                        {
                            AmentityId = 4,
                            Description = "A relaxing spa offering various treatments.",
                            Name = "Spa"
                        });
                });

            modelBuilder.Entity("HotelAPI.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            Address = "123 Main Street",
                            City = "City A",
                            Country = "Country A",
                            Email = "hotelA@example.com",
                            Name = "Hotel A",
                            Phone = "1234567890"
                        },
                        new
                        {
                            HotelId = 2,
                            Address = "456 Elm Street",
                            City = "City B",
                            Country = "Country B",
                            Email = "hotelB@example.com",
                            Name = "Hotel B",
                            Phone = "9876543210"
                        },
                        new
                        {
                            HotelId = 3,
                            Address = "789 Oak Avenue",
                            City = "City C",
                            Country = "Country C",
                            Email = "hotelC@example.com",
                            Name = "Hotel C",
                            Phone = "4561237890"
                        },
                        new
                        {
                            HotelId = 4,
                            Address = "321 Pine Road",
                            City = "City D",
                            Country = "Country D",
                            Email = "hotelD@example.com",
                            Name = "Hotel D",
                            Phone = "7896541230"
                        });
                });

            modelBuilder.Entity("HotelAPI.Models.HotelAmenities", b =>
                {
                    b.Property<int>("HotelAmentityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelAmentityId"), 1L, 1);

                    b.Property<int>("AmentityId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("HotelAmentityId");

                    b.HasIndex("AmentityId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelAmenities");

                    b.HasData(
                        new
                        {
                            HotelAmentityId = 1,
                            AmentityId = 1,
                            HotelId = 1
                        },
                        new
                        {
                            HotelAmentityId = 2,
                            AmentityId = 2,
                            HotelId = 1
                        },
                        new
                        {
                            HotelAmentityId = 3,
                            AmentityId = 3,
                            HotelId = 2
                        },
                        new
                        {
                            HotelAmentityId = 4,
                            AmentityId = 1,
                            HotelId = 2
                        },
                        new
                        {
                            HotelAmentityId = 5,
                            AmentityId = 2,
                            HotelId = 3
                        });
                });

            modelBuilder.Entity("HotelAPI.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<bool>("AC")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            AC = true,
                            Capacity = 2,
                            HotelId = 1,
                            Price = 100.0,
                            RoomNumber = 101
                        },
                        new
                        {
                            RoomId = 2,
                            AC = true,
                            Capacity = 4,
                            HotelId = 1,
                            Price = 150.0,
                            RoomNumber = 102
                        },
                        new
                        {
                            RoomId = 3,
                            AC = false,
                            Capacity = 3,
                            HotelId = 2,
                            Price = 120.0,
                            RoomNumber = 201
                        },
                        new
                        {
                            RoomId = 4,
                            AC = true,
                            Capacity = 2,
                            HotelId = 2,
                            Price = 90.0,
                            RoomNumber = 202
                        },
                        new
                        {
                            RoomId = 5,
                            AC = true,
                            Capacity = 5,
                            HotelId = 3,
                            Price = 200.0,
                            RoomNumber = 301
                        });
                });

            modelBuilder.Entity("HotelAPI.Models.HotelAmenities", b =>
                {
                    b.HasOne("HotelAPI.Models.Amenities", "Amenities")
                        .WithMany()
                        .HasForeignKey("AmentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenities");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelAPI.Models.Room", b =>
                {
                    b.HasOne("HotelAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });
#pragma warning restore 612, 618
        }
    }
}
